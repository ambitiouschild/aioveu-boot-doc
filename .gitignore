target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

### IntelliJ IDEA ###
.idea/modules.xml
.idea/jarRepositories.xml
.idea/compiler.xml
.idea/libraries/
*.iws
*.iml
*.ipr

### Eclipse ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/
!**/src/main/**/build/
!**/src/test/**/build/

### VS Code ###
.vscode/

### Mac OS ###
.DS_Store

### 根本原因： Git 不支持追踪 Unix 套接字文件 (mysql.sock)。
            #•核心解决： 将 mysql.sock 或其路径模式（如 *.sock）添加到 .gitignore 文件中
 ###文件已被跟踪：在将目录添加到 .gitignore 之前，这些文件已经被 Git 跟踪。###
 ###.gitignore 只忽略未被跟踪的文件，对于已经跟踪的文件，即使后来添加到 .gitignore，Git 仍然会继续跟踪。   ###
            ###

# 忽略整个 MySQL 数据目录


###始终将运行时生成的临时文件（如日志文件 *.log、缓存文件、套接字文件 *.sock、数据库文件（除非是初始化脚本）、编译产物等）添加到 .gitignore。###
aioveu-production
OssUtil.java
# 从 Git 索引中移除目录（但保留本地文件）
# git rm -r --cached docker/mysql/data
# git rm -r --cached docker/nginx/html
# git rm -r --cached docker/minio/data/.minio.sys
# git rm -r --cached docker/nginx/logs
# git rm -r --cached docker/nginx/conf

# git rm -r --cached docker/redis
# git rm -r --cached docker/nginx/
# git rm -r --cached docker/nginx-h5/
# 提交这个变更
# git commit -m "停止跟踪 docker/mysql/data 目录"
# git commit -m "停止跟踪 docker/nginx 目录"
# git commit -m "停止跟踪 docker/redis 目录"

# 如果不需要保留本地文件（谨慎使用）
# git rm -r --force docker/mysql/data

# git commit -m "停止跟踪 docker/mysql/data 目录"

## 1. 查看提交历史，找到包含敏感信息的提交
#git log
#
## 2. 对包含敏感信息的提交进行交互式rebase
#git rebase -i 56a7928f21c888ce36240db09cba9e536ce1a3db~1
#但是Git历史中仍然包含有敏感信息的提交
## 3. 在编辑器中，将包含敏感信息的提交标记为edit
## 4. 移除敏感信息后继续rebase
#git add .
#git commit --amend
#git rebase --continue
#
## 5. 推送修改后的历史
#git push --force-with-lease


重写Git历史（推荐）
# 1. 查看包含敏感信息的提交
git log --oneline | grep 56a7928

# 2. 启动交互式rebase，从包含敏感信息的提交之前开始
git rebase -i 56a7928f21c888ce36240db09cba9e536ce1a3db~1

# 3. 在编辑器中，将包含敏感信息的提交标记为edit
# 将类似这样的内容：
# pick 56a7928 包含敏感信息的提交
# pick f90909e 删除敏感信息的提交
# 改为：
# edit 56a7928 包含敏感信息的提交
# pick f90909e 删除敏感信息的提交

# 4. 保存退出后，Git会停在56a7928提交
# 删除该提交中的敏感信息（如果还有的话）

# 5. 继续rebase
git add .
git commit --amend
git rebase --continue

# 6. 强制推送（注意：这会重写历史）
git push --force-with-lease